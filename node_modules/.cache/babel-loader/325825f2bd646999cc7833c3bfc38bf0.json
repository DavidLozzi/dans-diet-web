{"ast":null,"code":"import { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { combineReducers, applyMiddleware, createStore, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport history from 'redux/history';\nimport { name as myDietReducerName, reducer as myDietReducer } from 'redux/api/myDiet/myDiet';\nconst middleware = [// Order dependent\nthunkMiddleware, // Enables actions to return functions\nrouterMiddleware(history) // Enables dispatching actions\n];\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger({\n    collapsed: true\n  })); // Must be at bottom\n}\n\nconst store = createStore(connectRouter(history)( // Adds router key-value pair to store state\ncombineReducers({\n  [myDietReducerName]: myDietReducer\n})), compose(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/david.lozzi/git/dansDiet/web/src/redux/store.js"],"names":["connectRouter","routerMiddleware","combineReducers","applyMiddleware","createStore","compose","createLogger","thunkMiddleware","history","name","myDietReducerName","reducer","myDietReducer","middleware","process","env","NODE_ENV","push","collapsed","store"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,OAAP,MAAoB,eAApB;AAEA,SAASC,IAAI,IAAIC,iBAAjB,EAAoCC,OAAO,IAAIC,aAA/C,QAAoE,yBAApE;AAEA,MAAMC,UAAU,GAAG,CAAE;AACnBN,eADiB,EACA;AACjBN,gBAAgB,CAACO,OAAD,CAFC,CAES;AAFT,CAAnB;;AAIA,IAAIM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,UAAU,CAACI,IAAX,CAAgBX,YAAY,CAAC;AAAEY,IAAAA,SAAS,EAAE;AAAb,GAAD,CAA5B,EADyC,CACW;AACrD;;AAED,MAAMC,KAAK,GAAGf,WAAW,CACvBJ,aAAa,CAACQ,OAAD,CAAb,EAAwB;AACtBN,eAAe,CAAC;AACd,GAACQ,iBAAD,GAAqBE;AADP,CAAD,CADjB,CADuB,EAMvBP,OAAO,CAACF,eAAe,CAAC,GAAGU,UAAJ,CAAhB,CANgB,CAAzB;AASA,eAAeM,KAAf","sourcesContent":["import { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { combineReducers, applyMiddleware, createStore, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\nimport history from 'redux/history';\n\nimport { name as myDietReducerName, reducer as myDietReducer } from 'redux/api/myDiet/myDiet';\n\nconst middleware = [ // Order dependent\n  thunkMiddleware, // Enables actions to return functions\n  routerMiddleware(history) // Enables dispatching actions\n];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger({ collapsed: true })); // Must be at bottom\n}\n\nconst store = createStore(\n  connectRouter(history)( // Adds router key-value pair to store state\n    combineReducers({\n      [myDietReducerName]: myDietReducer\n    })\n  ),\n  compose(applyMiddleware(...middleware))\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}