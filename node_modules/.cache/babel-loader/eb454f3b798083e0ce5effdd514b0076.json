{"ast":null,"code":"import _defineProperty from \"/Users/david.lozzi/git/dansDiet/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nexport const API_MYDIET_PENDING = 'API_MYDIET_PENDING';\nexport const API_MYDIET_SUCCESS = 'API_MYDIET_SUCCESS';\nexport const API_MYDIET_FAILURE = 'API_MYDIET_FAILURE';\nexport const name = 'mydiet';\nconst sources = [];\nconst promiseBackingStore = {};\nconst initialState = {\n  htmls: {},\n  loading: false,\n  error: false,\n  errorMessage: ''\n};\nexport const selectors = {\n  getHtmlData: state => state[name].htmls\n};\nexport const actions = {\n  fetchHtmls: url => async dispatch => {\n    if (promiseBackingStore[url]) return;\n    promiseBackingStore[url] = true;\n    const newSource = axios.CancelToken.source();\n    sources.push(newSource);\n    dispatch({\n      type: API_MYDIET_PENDING\n    });\n\n    try {\n      const response = await axios.get(url, {\n        cancelToken: newSource.token\n      });\n      dispatch({\n        type: API_MYDIET_SUCCESS,\n        payload: {\n          url,\n          response\n        }\n      });\n    } catch (error) {\n      delete promiseBackingStore[url];\n      dispatch({\n        type: API_MYDIET_FAILURE,\n        payload: error.message\n      });\n    }\n  }\n};\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case API_MYDIET_PENDING:\n      return _objectSpread({}, state, {\n        loading: true,\n        error: false,\n        errorMessage: ''\n      });\n\n    case API_MYDIET_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: true,\n        errorMessage: action.payload\n      });\n\n    case API_MYDIET_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        htmls: _objectSpread({}, state.htmls, {\n          [action.payload.url]: action.payload.response\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/david.lozzi/git/dansDiet/web/src/redux/api/myDiet/myDiet.js"],"names":["axios","API_MYDIET_PENDING","API_MYDIET_SUCCESS","API_MYDIET_FAILURE","name","sources","promiseBackingStore","initialState","htmls","loading","error","errorMessage","selectors","getHtmlData","state","actions","fetchHtmls","url","dispatch","newSource","CancelToken","source","push","type","response","get","cancelToken","token","payload","message","reducer","action"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,IAAI,GAAG,QAAb;AAEP,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,mBAAmB,GAAG,EAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,YAAY,EAAE;AAJK,CAArB;AAOA,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,WAAW,EAAEC,KAAK,IAAIA,KAAK,CAACV,IAAD,CAAL,CAAYI;AADX,CAAlB;AAIP,OAAO,MAAMO,OAAO,GAAG;AACrBC,EAAAA,UAAU,EAAEC,GAAG,IAAI,MAAOC,QAAP,IAAoB;AACrC,QAAIZ,mBAAmB,CAACW,GAAD,CAAvB,EAA8B;AAC9BX,IAAAA,mBAAmB,CAACW,GAAD,CAAnB,GAA2B,IAA3B;AAEA,UAAME,SAAS,GAAGnB,KAAK,CAACoB,WAAN,CAAkBC,MAAlB,EAAlB;AACAhB,IAAAA,OAAO,CAACiB,IAAR,CAAaH,SAAb;AAEAD,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEtB;AAAR,KAAD,CAAR;;AAEA,QAAI;AACF,YAAMuB,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAUR,GAAV,EAAe;AAAES,QAAAA,WAAW,EAAEP,SAAS,CAACQ;AAAzB,OAAf,CAAvB;AACAT,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAErB,kBAAR;AAA4B0B,QAAAA,OAAO,EAAE;AAAEX,UAAAA,GAAF;AAAOO,UAAAA;AAAP;AAArC,OAAD,CAAR;AACD,KAHD,CAGE,OAAOd,KAAP,EAAc;AACd,aAAOJ,mBAAmB,CAACW,GAAD,CAA1B;AACAC,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEpB,kBAAR;AAA4ByB,QAAAA,OAAO,EAAElB,KAAK,CAACmB;AAA3C,OAAD,CAAR;AACD;AACF;AAjBoB,CAAhB;AAoBP,OAAO,SAASC,OAAT,CAAiBhB,KAAK,GAAGP,YAAzB,EAAuCwB,MAAvC,EAA+C;AACpD,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKtB,kBAAL;AACE,+BACKa,KADL;AAEEL,QAAAA,OAAO,EAAE,IAFX;AAGEC,QAAAA,KAAK,EAAE,KAHT;AAIEC,QAAAA,YAAY,EAAE;AAJhB;;AAMF,SAAKR,kBAAL;AACE,+BACKW,KADL;AAEEL,QAAAA,OAAO,EAAE,KAFX;AAGEC,QAAAA,KAAK,EAAE,IAHT;AAIEC,QAAAA,YAAY,EAAEoB,MAAM,CAACH;AAJvB;;AAMF,SAAK1B,kBAAL;AACE,+BACKY,KADL;AAEEL,QAAAA,OAAO,EAAE,KAFX;AAGED,QAAAA,KAAK,oBACAM,KAAK,CAACN,KADN;AAEH,WAACuB,MAAM,CAACH,OAAP,CAAeX,GAAhB,GAAsBc,MAAM,CAACH,OAAP,CAAeJ;AAFlC;AAHP;;AAQF;AACE,aAAOV,KAAP;AAzBJ;AA2BD","sourcesContent":["import axios from 'axios';\n\nexport const API_MYDIET_PENDING = 'API_MYDIET_PENDING';\nexport const API_MYDIET_SUCCESS = 'API_MYDIET_SUCCESS';\nexport const API_MYDIET_FAILURE = 'API_MYDIET_FAILURE';\n\nexport const name = 'mydiet';\n\nconst sources = [];\nconst promiseBackingStore = {};\nconst initialState = {\n  htmls: {},\n  loading: false,\n  error: false,\n  errorMessage: ''\n};\n\nexport const selectors = {\n  getHtmlData: state => state[name].htmls\n};\n\nexport const actions = {\n  fetchHtmls: url => async (dispatch) => {\n    if (promiseBackingStore[url]) return;\n    promiseBackingStore[url] = true;\n\n    const newSource = axios.CancelToken.source();\n    sources.push(newSource);\n\n    dispatch({ type: API_MYDIET_PENDING });\n\n    try {\n      const response = await axios.get(url, { cancelToken: newSource.token });\n      dispatch({ type: API_MYDIET_SUCCESS, payload: { url, response } });\n    } catch (error) {\n      delete promiseBackingStore[url];\n      dispatch({ type: API_MYDIET_FAILURE, payload: error.message });\n    }\n  }\n};\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case API_MYDIET_PENDING:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMessage: ''\n      };\n    case API_MYDIET_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        errorMessage: action.payload\n      };\n    case API_MYDIET_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        htmls: {\n          ...state.htmls,\n          [action.payload.url]: action.payload.response\n        }\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}