{"ast":null,"code":"import { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { combineReducers, applyMiddleware, createStore, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport history from 'redux/history';\nimport { name as searchReducerName, reducer as searchReducer } from 'redux/api/search/search';\nimport { name as typeAheadReducerName, reducer as typeAheadReducer } from 'redux/api/type-ahead/type-ahead';\nimport { name as labDetailsReducerName, reducer as labDetailsReducer } from 'redux/api/labDetails/labDetails';\nimport { name as imageName, reducer as imageReducer } from 'redux/api/image/image';\nimport { name as htmlName, reducer as htmlReducer } from 'redux/api/html/html';\nimport { name as homeReducerName, reducer as homeReducer } from 'redux/pages/home/home';\nimport { name as resultsReducerName, reducer as resultsReducer } from 'redux/pages/results/results';\nimport { name as refinerReducerName, reducer as refinerReducer } from 'minerva-refiners';\nimport { name as notifyReducerName, reducer as notifyReducer } from 'redux/components/notification/notification';\nimport { name as docVizOverlayName, reducer as docVizOverlayReducer } from 'redux/components/docvizoverlay/docvizoverlay';\nimport { name as docVizSearchName, reducer as docVizSearchReducer } from 'redux/components/docvizsearch/docvizsearch';\nimport { name as labOverlayName, reducer as labOverlayReducer } from 'redux/components/laboverlay/laboverlay';\nimport { name as docVizSlideSelection, reducer as docVizSlideSelectionReducer } from 'redux/components/docvizoverlay/docVizSlideSelection';\nimport { name as materialReducerName, reducer as materialReducer } from 'redux/components/material/material';\nimport { name as storageName, reducer as storageReducer } from 'redux/api/storage/storage';\nimport { name as privacyPolicyStorageName, reducer as privacyPolicyStorageReducer } from 'redux/api/privacyPolicyStorage/privacyPolicyStorage';\nimport { name as typeAheadFeedback, reducer as typeAheadFeedbackReducer } from 'redux/components/typeaheadfeedback/typeaheadfeedback';\nimport { name as relevancyFeedbackName, reducer as relevancyFeedbackReducer } from 'redux/components/relevancyfeedback/relevancyfeedback';\nimport { name as topicSuggestionsName, reducer as topicSuggestionsReducer } from 'redux/api/topicSuggestions/topicSuggestions';\nimport { name as pinnedDocumentsName, reducer as pinnedDocumentsReducer } from 'redux/api/pinnedDocuments/pinnedDocuments';\nconst middleware = [// Order dependent\nthunkMiddleware, // Enables actions to return functions\nrouterMiddleware(history) // Enables dispatching actions\n];\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger({\n    collapsed: true\n  })); // Must be at bottom\n}\n\nconst store = createStore(connectRouter(history)( // Adds router key-value pair to store state\ncombineReducers({\n  [searchReducerName]: searchReducer,\n  [homeReducerName]: homeReducer,\n  [resultsReducerName]: resultsReducer,\n  [docVizOverlayName]: docVizOverlayReducer,\n  [labOverlayName]: labOverlayReducer,\n  [refinerReducerName]: refinerReducer,\n  [typeAheadReducerName]: typeAheadReducer,\n  [notifyReducerName]: notifyReducer,\n  [storageName]: storageReducer,\n  [privacyPolicyStorageName]: privacyPolicyStorageReducer,\n  [imageName]: imageReducer,\n  [htmlName]: htmlReducer,\n  [docVizSlideSelection]: docVizSlideSelectionReducer,\n  [materialReducerName]: materialReducer,\n  [typeAheadFeedback]: typeAheadFeedbackReducer,\n  [labDetailsReducerName]: labDetailsReducer,\n  [relevancyFeedbackName]: relevancyFeedbackReducer,\n  [topicSuggestionsName]: topicSuggestionsReducer,\n  [docVizSearchName]: docVizSearchReducer,\n  [pinnedDocumentsName]: pinnedDocumentsReducer\n})), compose(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/david.lozzi/git/dansDiet/web/src/redux/store.js"],"names":["connectRouter","routerMiddleware","combineReducers","applyMiddleware","createStore","compose","createLogger","thunkMiddleware","history","name","searchReducerName","reducer","searchReducer","typeAheadReducerName","typeAheadReducer","labDetailsReducerName","labDetailsReducer","imageName","imageReducer","htmlName","htmlReducer","homeReducerName","homeReducer","resultsReducerName","resultsReducer","refinerReducerName","refinerReducer","notifyReducerName","notifyReducer","docVizOverlayName","docVizOverlayReducer","docVizSearchName","docVizSearchReducer","labOverlayName","labOverlayReducer","docVizSlideSelection","docVizSlideSelectionReducer","materialReducerName","materialReducer","storageName","storageReducer","privacyPolicyStorageName","privacyPolicyStorageReducer","typeAheadFeedback","typeAheadFeedbackReducer","relevancyFeedbackName","relevancyFeedbackReducer","topicSuggestionsName","topicSuggestionsReducer","pinnedDocumentsName","pinnedDocumentsReducer","middleware","process","env","NODE_ENV","push","collapsed","store"],"mappings":"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","sourcesContent":["import { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { combineReducers, applyMiddleware, createStore, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\nimport history from 'redux/history';\n\nimport { name as searchReducerName, reducer as searchReducer } from 'redux/api/search/search';\nimport { name as typeAheadReducerName, reducer as typeAheadReducer } from 'redux/api/type-ahead/type-ahead';\nimport { name as labDetailsReducerName, reducer as labDetailsReducer } from 'redux/api/labDetails/labDetails';\nimport { name as imageName, reducer as imageReducer } from 'redux/api/image/image';\nimport { name as htmlName, reducer as htmlReducer } from 'redux/api/html/html';\nimport { name as homeReducerName, reducer as homeReducer } from 'redux/pages/home/home';\nimport { name as resultsReducerName, reducer as resultsReducer } from 'redux/pages/results/results';\nimport { name as refinerReducerName, reducer as refinerReducer } from 'minerva-refiners';\nimport { name as notifyReducerName, reducer as notifyReducer } from 'redux/components/notification/notification';\nimport { name as docVizOverlayName, reducer as docVizOverlayReducer } from 'redux/components/docvizoverlay/docvizoverlay';\nimport { name as docVizSearchName, reducer as docVizSearchReducer } from 'redux/components/docvizsearch/docvizsearch';\nimport { name as labOverlayName, reducer as labOverlayReducer } from 'redux/components/laboverlay/laboverlay';\nimport { name as docVizSlideSelection, reducer as docVizSlideSelectionReducer } from 'redux/components/docvizoverlay/docVizSlideSelection';\nimport { name as materialReducerName, reducer as materialReducer } from 'redux/components/material/material';\nimport { name as storageName, reducer as storageReducer } from 'redux/api/storage/storage';\nimport { name as privacyPolicyStorageName, reducer as privacyPolicyStorageReducer } from 'redux/api/privacyPolicyStorage/privacyPolicyStorage';\nimport { name as typeAheadFeedback, reducer as typeAheadFeedbackReducer } from 'redux/components/typeaheadfeedback/typeaheadfeedback';\nimport { name as relevancyFeedbackName, reducer as relevancyFeedbackReducer } from 'redux/components/relevancyfeedback/relevancyfeedback';\nimport { name as topicSuggestionsName, reducer as topicSuggestionsReducer } from 'redux/api/topicSuggestions/topicSuggestions';\nimport { name as pinnedDocumentsName, reducer as pinnedDocumentsReducer } from 'redux/api/pinnedDocuments/pinnedDocuments';\n\nconst middleware = [ // Order dependent\n  thunkMiddleware, // Enables actions to return functions\n  routerMiddleware(history) // Enables dispatching actions\n];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger({ collapsed: true })); // Must be at bottom\n}\n\nconst store = createStore(\n  connectRouter(history)( // Adds router key-value pair to store state\n    combineReducers({\n      [searchReducerName]: searchReducer,\n      [homeReducerName]: homeReducer,\n      [resultsReducerName]: resultsReducer,\n      [docVizOverlayName]: docVizOverlayReducer,\n      [labOverlayName]: labOverlayReducer,\n      [refinerReducerName]: refinerReducer,\n      [typeAheadReducerName]: typeAheadReducer,\n      [notifyReducerName]: notifyReducer,\n      [storageName]: storageReducer,\n      [privacyPolicyStorageName]: privacyPolicyStorageReducer,\n      [imageName]: imageReducer,\n      [htmlName]: htmlReducer,\n      [docVizSlideSelection]: docVizSlideSelectionReducer,\n      [materialReducerName]: materialReducer,\n      [typeAheadFeedback]: typeAheadFeedbackReducer,\n      [labDetailsReducerName]: labDetailsReducer,\n      [relevancyFeedbackName]: relevancyFeedbackReducer,\n      [topicSuggestionsName]: topicSuggestionsReducer,\n      [docVizSearchName]: docVizSearchReducer,\n      [pinnedDocumentsName]: pinnedDocumentsReducer\n    })\n  ),\n  compose(applyMiddleware(...middleware))\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}